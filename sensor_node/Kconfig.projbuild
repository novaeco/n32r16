menu "Sensor Node Options"
    choice SENSOR_AMBIENT_SENSOR
        prompt "Ambient sensor type"
        default SENSOR_AMBIENT_SENSOR_SHT20
        help
            Select the ambient temperature and humidity sensing front-end attached to
            the primary I\u00b2C bus. The firmware provides dedicated drivers and
            filtering pipelines per sensor family and will synthesise demo data when
            no physical devices are detected.

    config SENSOR_AMBIENT_SENSOR_SHT20
        bool "Sensirion SHT20"

    config SENSOR_AMBIENT_TCA9548A_ENABLE
        bool "Use TCA9548A mux for dual SHT20"
        depends on SENSOR_AMBIENT_SENSOR_SHT20
        default y
        help
            Enable this option when both ambient channels are populated with SHT20 sensors.
            The firmware will drive a TCA9548A I\u00b2C multiplexer to expose the fixed-address
            sensors on distinct downstream buses, avoiding collisions on 0x40.

    config SENSOR_TCA9548A_ADDRESS
        hex "TCA9548A I2C address"
        depends on SENSOR_AMBIENT_TCA9548A_ENABLE
        range 0x70 0x77
        default 0x70

    config SENSOR_TCA9548A_CH0
        int "TCA9548A channel for ambient sensor #1"
        depends on SENSOR_AMBIENT_TCA9548A_ENABLE
        range 0 7
        default 0

    config SENSOR_TCA9548A_CH1
        int "TCA9548A channel for ambient sensor #2"
        depends on SENSOR_AMBIENT_TCA9548A_ENABLE
        range 0 7
        default 1

    config SENSOR_AMBIENT_SENSOR_BME280
        bool "Bosch BME280"

    endchoice

    config SENSOR_ONEWIRE_GPIO
        int "1-Wire bus GPIO"
        range 0 48
        default 8
        help
            GPIO used to interface the DS18B20 one-wire bus. Adjust when porting to
            ESP32-S3 modules with different pinouts.

    choice SENSOR_PWM_BACKEND_DRIVER
        prompt "PWM backend"
        default SENSOR_PWM_BACKEND_DRIVER_PCA9685
        help
            Select the PWM expansion peripheral used for actuator control.

    config SENSOR_PWM_BACKEND_DRIVER_PCA9685
        bool "NXP PCA9685 (I\u00b2C)"

    config SENSOR_PWM_BACKEND_DRIVER_TLC5947
        bool "TI TLC5947 (SPI)"

    config SENSOR_PWM_BACKEND_DRIVER_NONE
        bool "Disable external PWM backend"

    endchoice

    config SENSOR_PWM_BACKEND
        string "PWM backend identifier"
        default "pca9685" if SENSOR_PWM_BACKEND_DRIVER_PCA9685
        default "tlc5947" if SENSOR_PWM_BACKEND_DRIVER_TLC5947
        default "none" if SENSOR_PWM_BACKEND_DRIVER_NONE
        help
            String identifier for the selected PWM expansion backend. Exposed to the
            application for conditional logic and telemetry labelling.
    config SENSOR_ALLOW_PLACEHOLDER_SECRETS
        bool "Allow building with placeholder security material"
        default n
        help
            Enable this option only for development images where placeholder
            bearer tokens, provisioning POPs, and OTA manifest URLs remain
            configured. Production builds must provide unique values to avoid
            compilation failures enforced by app_main.c.

    config SENSOR_WS_PORT
        int "WebSocket server port"
        range 80 65535
        default 8080
    config SENSOR_WS_AUTH_TOKEN
        string "WebSocket bearer token"
        default "replace-me"
    config SENSOR_WS_ENABLE_ENCRYPTION
        bool "Encrypt WebSocket frames with AES-GCM"
        default n
    config SENSOR_WS_ENABLE_HANDSHAKE
        bool "Require HMAC handshake headers"
        default n
    config SENSOR_WS_CRYPTO_SECRET_BASE64
        string "WebSocket shared secret (Base64)"
        default ""
    config SENSOR_WS_HANDSHAKE_TTL_MS
        int "Handshake nonce retention window (ms)"
        range 1000 3600000
        default 300000
    config SENSOR_WS_HANDSHAKE_CACHE_SIZE
        int "Handshake nonce cache size"
        range 8 128
        default 32
    config SENSOR_PROV_SERVICE_NAME
        string "Provisioning service name suffix"
        default "SENSOR"
    config SENSOR_PROV_POP
        string "Provisioning proof-of-possession"
        default "sensor-pop"
    config SENSOR_PROV_SEC2_USERNAME
        string "Provisioning SRP username"
        default "wifiprov"
    config SENSOR_PROV_SEC2_SALT_BASE64
        string "Provisioning SRP salt (Base64)"
        default "A27gx7y57ahMnqyX2T3s9A=="
    config SENSOR_PROV_SEC2_VERIFIER_BASE64
        string "Provisioning SRP verifier (Base64)"
        default "fHyFR2UIlG3WNq831+iRQ3jP/WFsWdL4OQgScjjeniSkcCYc36kDwrJw57EyJNoRHZcY3GByCMyayQxIJ+KuiaoWJbgE0hqbOo839uQ6cS7hJ4Zurc4o/1RGYB+5lofcV0Cn1GzJd1TcFoLw7TVqxHCtPZC1gZRw17xlstUY4C7Dpflo3WR7uLc8nPwA2HF+t5p8sbfCwxg0KTJDPgCZ6YKU49gqsJYpt98OXwgzQHZSkTIAn5csiWw5HsgoBUQXP2gCip9EYdH1oX5acNLHI4HLOGjkLCC8QFd2F70IuJa8JusyRmk1BYwVcNkb6b7MqTimZ/CtUBMZcmS/UsI04hsReXRyvTRbseL9ZnP+cWR00E68USQZQIcOkkDmIectTjd2Ly7iaMeJ6DITQgaEhFNKswwbTI0cUZcZq653/9vs8BCVNDNryz6ED7nYX7iguFVTPnD3GPXOe06/J87OqLO+QMXFMik+cWSe3oz2daHm9lPIMah43lBA92LeNrK6"
    config SENSOR_PROV_TIMEOUT_MS
        int "Provisioning completion timeout (ms)"
        range 1000 600000
        default 180000
    config SENSOR_PROV_CONNECT_TIMEOUT_MS
        int "Wi-Fi connect attempt timeout (ms)"
        range 1000 120000
        default 20000
    config SENSOR_PROV_MAX_ATTEMPTS
        int "Maximum Wi-Fi connect attempts before failing"
        range 1 20
        default 5
    config SENSOR_PROV_PREFER_BLE
        bool "Préférer le schéma de provisioning BLE"
        default n
        help
            Active la tentative de provisioning via BLE (ESP BLE Provisioning).
            Lorsque le contrôleur Bluetooth est indisponible, le firmware
            bascule automatiquement vers le schéma SoftAP classique.
    config SENSOR_OTA_URL
        string "HTTPS OTA manifest URL"
        default "https://example.com/sensor/ota.json"
    config USE_CBOR
        bool "Enable CBOR payloads"
        default n
    config SENSOR_ENABLE_GCOV
        bool "Enable gcov instrumentation for unit tests"
        default n
        help
            Selecting this option appends "-fprofile-arcs -ftest-coverage" to the
            compilation and linking flags for the sensor node component. Enable it
            in CI or dedicated coverage builds before executing `idf.py -T` to
            generate `.gcda` files consumable by tools/run_coverage.py.
endmenu
